Uuwaplan, набор скриптов на bash для планирования.

Набор скриптов позволяет вести простую базу данных
заметок, распределенных по датам и категориям. БД
представляет собой простой текстовый файл .plans.txt,
расположенный в домашней директории пользователя.

Скрипты plan.sh и rplan.sh служат для занесения заметок
из командной строки в базу. Скрипты plan_cal.sh и weekplan.sh --
для отображения заметок из базы, преимущественно в связке с 
системным монитором Conky, хотя и могут использоваться отдельно
от него.


Подробное описание скриптов.



I. plan.sh
Скрипт добавляет заметку в базу. Формат вызова следующий:
./plan.sh [-e] ДАТА ГРУППА [ТЕКСТ]
Параметр ДАТА -- дата, записанная в любом формате, который
может воспринять команда date, например:

Абсолютные даты: "20120523", "2012-05-23", "05/23/2012"
Относительные даты: "+1 day", "+1 week", "+1 month", "+1 month +1 day" 

Параметр ГРУППА -- слово, обозначающее какую-либо группу заметок.
Можеть быть произвольным: "семья", "работа", "экзамены". Следует, однако
обратить внимание, что скрипт weekplan.sh по умолчанию отводит мало места
под категорию -- 6 символов. Поэтому в случае использования длинных слов
рекомендуется создать конфигурационный файл для этого скрипта. Подробнее
см. в описании скрипта weekplan.sh

Параметр ТЕКСТ -- текст заметки. На данный момент поддерживаются только
однострочные заметки. Если заметка состоит из нескольких слов, их необязательно
забирать в кавычки, поскольку скрипт интерпретирует все параметры после второго
как текст заметки.

Если указан параметр -e, то для редактирования текста заметки будет вызван внешний
редактор. При использовании этого параметра можно указать заготовку в командной строке,
и тогда откроется редактор с этим текстом, либо не указывать ничего и набрать текст
в редакторе. Отредактированный текст будет урезан до первой строки.

Примеры:
./plan.sh 2012-12-31 праздник Новый Год
./plan.sh "tomorrow +1 month" платежи Очередной платеж по кредиту



II. rplan.sh
Скрипт служит для добавления в базу периодических заметок:
./rplan.sh [-e] ДАТА СМЕЩЕНИЕ КОЛИЧЕСТВО ГРУППА [ТЕКСТ]

В отношении параметров ДАТА, ГРУППА и ТЕКСТ скрипт аналогичен предыдущему.

Параметр СМЕЩЕНИЕ определяет интервал, между которыми расставляются заметки.
Формат параметра аналогичен формату относительной даты команды date.

Параметр КОЛИЧЕСТВО определяет, сколько заметок будет поставлено.

Примеры:
./rplan.sh "next Monday" "+3 day" 25 досуг Спортзал каждые 3 дня, абонемент на 25 посещений.
./rplan.sh "2012-07-01" "+1 year" 100 личное День рождения Маши



III. mvplan.sh
Скрипт позволяет передвигать заметки на другие даты:
./mvplan.sh НОВАЯ_ДАТА [СТАРАЯ_ДАТА] [КАТЕГОРИЯ] СЛОВА

Параметр СЛОВА -- слова, по которым будет производиться поиск необходимой заметки.
Полнота фразы неважна, но важен порядок слов.

Необязательный параметр КАТЕГОРИЯ дополнительно задает категорию заметок, в которой будет
производиться поиск.

Необязательный параметр СТАРАЯ_ДАТА позволяет еще более сузить круг поиска. Полезен, когда
необходимо передвинуть одно из повторяющихся событий.

Примеры:
./mvplan.sh tomorrow кино с Машей -- перенесет заметку "Идем в кино с Машей" на завтрашюю дату.
./mvplan.sh tomorrow today качалка -- предположим, что были созданы повторяющиеся заметки со словом `качалка`,
данная команда перенесет одну запись с сегодняшнего дня на завтра.
./mvplan.sh @0 work Отпуск -- перенесет заметку в начало UNIX-эпохи, что можно рассматривать как
быстрый способ "удалить" заметку. Эх, опять отдохнуть не дали, гады. :(



IV. plan_cal.sh
Основное назначение скрипта -- выводить календарь на текущий месяц в Conky,
подсвечивая определенные даты.

Строка вызова скрипта в файле конфигурации Conky выглядит примерно так:

${execp plan_cal.sh}

Использование execp обусловлено тем, что скрипт использует цветовые тэги
Conky, чтобы подсвечивать текущую дату, а также даты, связанные с заметками.

Поведение календаря может быть настроено путем создания в домашней директории пользователя
файла .plancalrc

В файл можно записать следующие параметры, влияющие на календарь:

PX_OFFSET (по умолчанию 14) -- отступ в пикселах от края окна Conky

CURRENT_DATE_COLOR (по умолчанию orange) -- цвет, которым подсвечивается текущая дата.
Могут быть использованы как названия цветов (orange, red, blue), так и HEX-коды (#FF4D00, #00FF00)

IMPORTANT_COLOR (по умолчанию #FF4D00) -- цвет, которым подсвечивается дата, относящаяся
хотя бы к одной заметке.

ONLY_IMPORTANT (по умолчанию 0) -- если этот параметр больше 0, то в календаре подсвечиваются только
даты, относящиеся к заметкам, помеченным как важные (о важных заметках см. далее), в противном
случае, подсвечиваются все даты, для которых есть заметки.

Пример конфигурационного файла (знак = не должен быть отделен пробелами):
ONLY_IMPORTANT=1
CURRENT_DATE_COLOR=green
IMPORTANT_COLOR=red

V. weekplan.sh
Выводит список заметок на неделю. Может быть использован как совместно с Conky,
так и отдельно.

Строка вызова скрипта в файле конфигурации Conky выглядит примерно так:

${execp weekplan}

Поведение скрипта может быть настроено путем создания в домашней директории пользователя
файла .weekplanrc

В файл можно записать следующие параметры:

PX_OFFSET (по умолчанию 14) -- отступ в пикселах от края окна Conky

OVERALL_WIDTH (по умолчанию 50) -- ширина списка в символах. Заголовок с датой выравнивается
по правому краю этого поля.

TAG_FIELD_WIDTH (по умолчанию 6) -- ширина поля для категории заметки. Поле OVERALL_WIDTH
делится между текстом заметки и ее категорией. Категория занимает правую часть шириной
TAG_FIELD_WIDTH и выравнивается по ее правому краю. Текст заметки занимает оставшуюся часть
и выравнивается по левому краю. Ширина поля текста вычисляется по формуле: 
OVERALL_WIDTH - TAG_FIELD_WIDTH - 1

CURRENT_DATE_COLOR (по умолчанию orange) -- цвет, которым подсвечивается текущая дата.
Могут быть использованы как названия цветов (orange, red, blue), так и HEX-коды (#FF4D00, #00FF00)

IMPORTANT_COLOR (по умолчанию #FF4D00) -- цвет, которым подсвечиваются важные заметки.

FLOW_MODE (по умолчанию 0) -- если параметр больше 0, то период "неделя" будет трактоваться как
"7 дней, начиная с сегодняшнего", в противном случае будет использоваться календарная неделя --
будут показаны все заметки от текущего дня по ближайшего понедельника.

CON_OUTPUT (по умолчанию 0) -- если параметр равен 0, то скрипт будет использовать цветовые тэги
Conky для выделения заметок, в противном случае будет выведен обычный текст. Таким образом,
при CON_OUTPUT=1 скрипт пригоден для использования в обычном терминале.

Пример конфигурационного файла (знак = не должен быть отделен пробелами):
CURRENT_DATE_COLOR=green
FLOW_MODE=1
OVERALL_WIDTH=60
TAG_FIELD_WIDTH=8

VI. plan_vacuum.sh
Очищает базу данных от записей, даты которых уже в прошлом. Не имеет параметров, рекомендуется к
периодическому запуску с помощью cron.

VII. libplan.sh
Скрипт содержит в себе функции по работе с базой, с помощью которых функционируют все остальные скрипты.



Дополнительные замечания.

I. Заметка может быть помечена как важная, для этого при добавлении заметки к названию
группы достаточно приписать символ "!". Например:
./plan.sh "+1 week" учеба! Последний экзамен.

II. Для удобства использования можно сделать в /usr/local/bin символические ссылки на скрипты, например
plan -> plan.sh, rplan ->rplan.sh В таком случае необходимо также сделать ссылку libplan.sh -> libplan.sh,
поскольку скрипты устроены так, что ищут файл libplan.sh в той директории, где находятся сами. Т.е. при вызове
скрипта plan.sh командой plan ..., будет выполняться скрипт /usr/local/bin/plan, который станет искать libplan.sh
также в /usr/local/bin.
